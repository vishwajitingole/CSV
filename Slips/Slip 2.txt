pip install pandas scikit-learn

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load the dataset (replace 'house_prices.csv' with your actual dataset)
data = pd.read_csv('house_prices.csv')

# Check for null values and remove them
data.dropna(inplace=True)

# Assume 'Size' is the feature and 'Price' is the target variable
X = data[['Size']]  # Feature
y = data['Price']   # Target

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict house prices
predictions = model.predict(X_test)

# Display predictions
print("Predicted House Prices:", predictions)




wholesale_customers.csv

Channel,Region,Fresh,Milk,Grocery,Frozen,Detergents_Paper,Delicassen
1,1,12669,9658,7561,2148,503,965
2,1,7057,9826,14600,1048,582,1298
1,2,8196,6096,6082,1985,700,501
2,2,10370,7040,5780,2459,513,1029
1,3,1971,1519,1362,858,487,124
2,3,11909,11017,4600,3780,1120,2200
1,1,10906,15227,4256,3158,219,430
2,1,4138,2821,6109,1978,657,1271


pip install pandas scikit-learn matplotlib

import pandas as pd
from sklearn.cluster import AgglomerativeClustering
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
import seaborn as sns

# Load the dataset
data = pd.read_csv('wholesale_customers.csv')

# Select features for clustering (excluding 'Channel' and 'Region')
X = data.drop(['Channel', 'Region'], axis=1)

# Standardize the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Perform Agglomerative Clustering
clustering = AgglomerativeClustering(n_clusters=3)  # You can adjust the number of clusters
data['Cluster'] = clustering.fit_predict(X_scaled)

# Visualize the clusters using seaborn
plt.figure(figsize=(10, 6))
sns.scatterplot(data=data, x='Fresh', y='Milk', hue='Cluster', palette='Set2', style='Cluster', s=100)
plt.title('Agglomerative Clustering of Wholesale Customers')
plt.xlabel('Annual Spending on Fresh Products')
plt.ylabel('Annual Spending on Milk')
plt.legend(title='Cluster')
plt.show()